filter(`Race/Ethnicity` == "African-American / Black", Year == "2016") #%>%
afam_uninsured <- uninsured_data_national %>%
filter(`Race/Ethnicity` == "African-American / Black", Year == "2016") %>%
select(Data)
afam_uninsured <- afam_uninsured[1,1]
afam_uninsured
his_uninsured <- uninsured_data_national %>%
filter(`Race/Ethnicity` == "Hispanic / Latino", Year == "2016") %>%
select(Data)
his_uninsured <- his_uninsured[1,1]
his_uninsured
other_uninsured <- uninsured_data_national %>%
filter(`Race/Ethnicity` == "Other / Multiple Races", Year == "2016") %>%
select(Data)
other_uninsured <- other_uninsured[1,1] #17.927
other_uninsured
white_uninsured <- uninsured_data_national %>%
filter(`Race/Ethnicity` == "White", Year == "2016") %>%
select(Data)
white_uninsured <- white_uninsured[1,1] #9.72
white_uninsured
asian_uninsured <- uninsured_data_national %>%
filter(`Race/Ethnicity` == "Asian", Year == "2016") %>%
select(Data)
asian_uninsured <- asian_uninsured[1,1] #5.701
asian_uninsured
runApp()
runApp()
his_uninsured <- paste(his_uninsured, "%", sep = "")
white_uninsured <- paste(white_uninsured, "%", sep = "")
runApp()
income_by_race <- read_xlsx("data/income_by_race.xlsx")
View(income_by_race)
runApp()
runApp()
runApp()
Q1_analysis <-  paste(p("If we take the average of median income and life expectancy between 2002 and 2016, we see that the median
income and life expectancy for black people is ", avg_median_income_black_string, " and ", avg_le_black, " years, respectively.
For white people, average median income and life expectancy is ", avg_median_income_white_string, " and ", avg_le_white," years respectively.
For all races, average median income and life expectancy is ", avg_median_income_all_string," and ",avg_le_all, "respectively."),
p("Black people in the US have a significantly lower median income and life expectancy than white people and all races. White people in the US
have a slightly higher median income and life expectancy than all races.
If we compare trends over time, there does not seem to be a correlation
between median income and average life expectancy. Average life expectancy
seemed to to be increasing over time at a decelerating rate while median
income dipped after 2008 and slowly increased. However, we should note that
average life expectancy overall seems to be correlated with median income.
The races from lowest to highest average life expectancy are Black, All
races, and White. This is the same order for median income."),
p(a("The World Bank", href="http://databank.worldbank.org/data/reports.aspx?source=world-development-indicators&preview=on"),
"has data on Gross National Income (GNI) per capita and life expectancy from 1968 to 2016.
When we compared those figures, there was a", correlation_GNI_le,
"correlation between GNI per capita and life expectancy. This is consistent with
our finding that white people had higher median incomes and higher life expectancies."),
p("The data use to create these visuals comes from the ",
a("National Center for Health Statistics", href="https://data.cdc.gov/NCHS/NCHS-Death-rates-and-life-expectancy-at-birth/w9j2-ggv5/data"),
"and the ",
a("United States Census", href="https://www.census.gov/data/tables/2017/demo/income-poverty/p60-259.html"),
p("Gross National income is defined as", em("the total domestic and foreign output claimed by
residents of a country, consisting of gross domestic product (GDP), plus factor incomes earned by
foreign residents, minus income earned in the domestic economy by nonresidents."),
"You can find more about it",
a("here", href="https://en.wikipedia.org/wiki/Gross_national_income"), ".")
))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#reading in data from IHME US State Life Expectancy csv File
life_expectancy <- read.csv("data/IHME_US_STATE_LIFE_EXPECTANCY_1987_2009_lowercase_Q4.csv", stringsAsFactors = FALSE)
View(life_expectancy)
# pct_insurance_by_race <- read_xlsx("data/pct_insurance_by_race.xlsx")
le_by_state <- read.csv("data/IHME_US_STATE_LIFE_EXPECTANCY_1987_2009.csv", stringsAsFactors = FALSE)
View(le_by_state)
le_by_state$State
le_by_state$State <- toupper(le_by_state$State)
toupper(le_by_state$State)
library(stringr)
str_to_title(le_by_state$State)
le_by_state
le_by_state$State <- str_to_title(le_by_state$State)
le_by_state
class(le_by_state)
runApp()
runApp()
runApp()
View(le_state)
View(trend)
le_range <- range(trend$avg.life.expectancy)
le_range
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
trend <- le_state %>%
select(State, Male.life.expectancy.change.1987.to.2009..years., Female.life.expectancy.change.1987.to.2009..years.)
head(trend)
trend <- trend %>% select(State, avg.life.expectancy)
trend <- mutate(trend, avg.life.expectancy = (Male.life.expectancy.change.1987.to.2009..years. +
Female.life.expectancy.change.1987.to.2009..years.) / 2)
trend <- trend %>% select(State, avg.life.expectancy)
View(trend)
runApp()
trend <- unique(trend)
View(trend)
runApp()
le_range <- range(trend$avg.life.expectancy)
le_range
runApp()
runApp()
runApp()
runApp()
trend <- unique(trend)
le_range <- range(trend$avg.life.expectancy)
le_range
runApp()
runApp()
runApp()
runApp()
trend[trend$avg.life.expectancy, ]
runApp()
runApp()
runApp()
runApp()
runApp()
uninsured_data_national
uninsured_data_national$Year
unique(uninsured_data_national$Year)
insurance_year_range <- range(unique(uninsured_data_national$Year))
insurance_year_range
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
median_change_in_le <- median(trend)
trend <- unique(trend)
trend
median_change_in_le <- median(trend$avg.life.expectancy)
median_change_in_le
View(le_state)
le_state$Male.life.expectancy..years.
le_state_2009 <- le_state %>%
filter(Year == "2009")
le_for_median_2009 <- le_state %>%
filter(Year == "2009")
le_for_median_2009
median_le_male <- le_for_median_2009$Male.life.expectancy..years.
median_le_male
median_le_male <- median(le_for_median_2009$Male.life.expectancy..years.)
median_le_male
median_le_female <- median(le_for_median_2009$Female.life.expectancy..years.)
median_le_female
le_for_median_1987 <- le_state %>%
filter(Year == "1987")
le_for_median_1987
median_le_male_1987 <- median(le_for_median_1987$Male.life.expectancy..years.) #76.3
median_le_male_1987
median_le_female_1987
median_le_female_1987 <- median(le_for_median_1987$Female.life.expectancy..years.) # 81.1
median_le_female_1987
runApp()
runApp()
runApp()
median_change_in_le
# MEDIANS
uninsured_data %>%
filter(`Race/Ethnicity` == "Asian")
# MEDIANS
median_asian <- uninsured_data %>%
group_by(`Race/Ethnicity`) %>%
summarise(median)
# MEDIANS
median_asian <- uninsured_data %>%
group_by(`Race/Ethnicity`) %>%
summary(median)
median_asian
View(median_asian)
# MEDIANS
uninsured_data %>%
group_by(`Race/Ethnicity`)
# MEDIANS
z <- uninsured_data %>%
group_by(`Race/Ethnicity`)
View(z)
# MEDIANS
asian_uninsured <- uninsured_data %>%
filter(`Race/Ethnicity` == "Asian")
asian_median <- median(asian_median)
# MEDIANS
asian_median <- uninsured_data %>%
filter(`Race/Ethnicity` == "Asian")
asian_median <- median(asian_median)
asian_median <- median(asian_median, na.rm = TRUE)
# MEDIANS
asian_median <- uninsured_data %>%
filter(`Race/Ethnicity` == "Asian") %>%
select(Data)
asian_median <- median(asian_median, na.rm = TRUE)
# MEDIANS
asian_median <- uninsured_data %>%
filter(`Race/Ethnicity` == "Asian") %>%
select(Data)
asian_median
asian_median <- na.omit(asian_median)
asian_median
asian_median <- as.numeric(asian_median)
median(asian_median)
asian_median <- as.vector(asian_median)
asian_median <- as.numeric(asian_median)
View(asian_median)
# MEDIANS
asian_median <- uninsured_data %>%
filter(`Race/Ethnicity` == "Asian") %>%
select(Data)
asian_median <- asian_median$Data
asian_median <- median(asian_median$Data)
# MEDIANS
asian_median <- uninsured_data %>%
filter(`Race/Ethnicity` == "Asian") %>%
select(Data) %>%
na.omit()
asian_median <- median(asian_median$Data)
asian_median
get_median <- function(race) {
race_to_string <- paste(race)
median <- filter(`Race/Ethnicity` == race_to_string) %>%
select(Data) %>%
na.omit()
median <- median(median$Data)
median
}
get_median("Asian")
get_median <- function(race) {
race_to_string <- paste(race)
median <- uninsured_data %>%
filter(`Race/Ethnicity` == race_to_string) %>%
select(Data) %>%
na.omit()
median <- median(median$Data)
median
}
get_median("Asian")
get_median <- function(race) {
race_to_string <- paste(race)
median <- uninsured_data %>%
filter(`Race/Ethnicity` == race_to_string) %>%
select(Data) %>%
na.omit()
median <- median(median$Data)
median
}
asian_median <- get_median("Asian") # 11.207
latio_median <- get_median("Hispanic / Latino")
white_median <- get_median("White")
black_median <- get_median("African-American / Black")
other_median <- get_median("Other / Multiple Races")
asian_median <- get_median("Asian") # 11.207
asian_median
latio_median
white_median
black_median
other_median
get_uninsured_2016 <- function(race) {
race_to_string <- paste(race)
rate <- uninsured_data_national %>%
filter(`Race/Ethnicity` == race_to_string, Year == "2016") %>%
select(Data)
rate <- rate[1,1] #5.701
rate <- paste(rate, "%", sep = "")
}
get_uninsured_2016("White")
get_uninsured_2016 <- function(race) {
race_to_string <- paste(race)
rate <- uninsured_data_national %>%
filter(`Race/Ethnicity` == race_to_string, Year == "2016") %>%
select(Data)
rate <- rate[1,1] #5.701
rate <- paste(rate, "%", sep = "")
}
get_uninsured_2016("White")
get_uninsured_2016 <- function(race) {
race_to_string <- paste(race)
rate <- uninsured_data_national %>%
filter(`Race/Ethnicity` == race_to_string, Year == "2016") %>%
select(Data)
rate <- rate[1,1] #5.701
rate <- paste(rate, "%", sep = "")
rate
}
get_uninsured_2016("White")
asian_uninsured <- get_uninsured_2016("Asian")
asian_uninsured
get_uninsured_2016 <- function(race) {
race_to_string <- paste(race)
rate <- uninsured_data_national %>%
filter(`Race/Ethnicity` == race_to_string, Year == "2016") %>%
select(Data)
rate <- rate[1,1] #5.701
rate <- paste(rate, "%", sep = "")
rate
}
his_uninsured <- get_uninsured_2016("Hispanic / Latino") #17.927
other_uninsured <- get_uninsured_2016("Other / Multiple Races") #9.72
afam_uninsured <- get_uninsured_2016("African-American / Black") # 9.555
asian_uninsured <- get_uninsured_2016("Asian") #6.599
white_uninsured <- get_uninsured_2016("White") # 5.701
his_uninsured
other_uninsured
afam_uninsured
asian_uninsured
white_uninsured
runApp()
View(income_by_race)
le_at_birth_race
le_at_birth_race <- read.csv("data/le_at_birth_race.csv", stringsAsFactors = FALSE)
head(le_at_birth_race)
View(le_at_birth_race)
View(le_national)
overview_le <- le_national %>%
filter(Sex == "Both Sexes")
View(overview_le)
overview_le <- le_national %>%
filter(Sex == "Both Sexes", Race == "All Races")
View(overview_le)
colnames(overview_le)
ggplot(overview_le) +
geom_point(mapping = aes(x = Year, y = "Avg.Life.Expectancy.Years"), color = "Avg.Life.Expectancy.Years")
ggplot(overview_le) +
geom_point(mapping = aes(x = Year, y = "Avg.Life.Expectancy.Years", color = "Avg.Life.Expectancy.Years"))
overview_le <- le_national %>%
filter(Sex == "Both Sexes", Race == "All Races") %>%
na.omit()
ggplot(overview_le) +
geom_point(mapping = aes(x = Year, y = "Avg.Life.Expectancy.Years", color = "Avg.Life.Expectancy.Years"))
ggplot(overview_le) +
geom_point(mapping = aes(x = Year, y = Avg.Life.Expectancy.Years, color = Avg.Life.Expectancy.Years))
ggplot(overview_le) +
geom_point(mapping = aes(x = Year, y = Avg.Life.Expectancy.Years, color = Avg.Life.Expectancy.Years)) +
scale_color_gradient(low = "orange", high = "blue")
ggplot(overview_le) +
geom_point(mapping = aes(x = Year, y = Avg.Life.Expectancy.Years, color = Avg.Life.Expectancy.Years)) +
scale_color_gradient(low = "orange", high = "blue") +
theme(legend.position = "none")
ggplot(overview_le) +
geom_point(mapping = aes(x = Year, y = Avg.Life.Expectancy.Years, color = Avg.Life.Expectancy.Years)) +
scale_color_gradient(low = "orange", high = "blue") +
theme(title = "Average Life Expectancy Over Time 1900 to 2016",
plot.title = element_text(size = 18),
axis.title.x = "Year",
axis.title.y = "Average Life Expectancy",
legend.position = "none")
ggplot(overview_le) +
geom_point(mapping = aes(x = Year, y = Avg.Life.Expectancy.Years, color = Avg.Life.Expectancy.Years)) +
scale_color_gradient(low = "orange", high = "blue") +
theme(ggtitle("Average Life Expectancy Over Time 1900 to 2016") ,
plot.title = element_text(size = 18),
axis.title.x = "Year",
axis.title.y = "Average Life Expectancy",
legend.position = "none")
ggplot(overview_le) +
geom_point(mapping = aes(x = Year, y = Avg.Life.Expectancy.Years, color = Avg.Life.Expectancy.Years)) +
scale_color_gradient(low = "orange", high = "blue") +
ggtitle("Average Life Expectancy Over Time 1900 to 2016") +
theme(
plot.title = element_text(size = 18),
axis.title.x = "Year",
axis.title.y = "Average Life Expectancy",
legend.position = "none")
ggplot(overview_le) +
geom_point(mapping = aes(x = Year, y = Avg.Life.Expectancy.Years, color = Avg.Life.Expectancy.Years)) +
scale_color_gradient(low = "orange", high = "blue") +
ggtitle("Average Life Expectancy Over Time 1900 to 2016") +
theme(
plot.title = element_text(size = 18),
legend.position = "none") +
labels(x = "Year", y = "Average Life Expectancy")
plot.title = element_text(size = 18),
legend.position = "none") +
labs(x = "Year", y = "Average Life Expectancy")
ggplot(overview_le) +
geom_point(mapping = aes(x = Year, y = Avg.Life.Expectancy.Years, color = Avg.Life.Expectancy.Years)) +
scale_color_gradient(low = "orange", high = "blue") +
ggtitle("Average Life Expectancy Over Time 1900 to 2016") +
theme(
plot.title = element_text(size = 18),
legend.position = "none") +
labs(x = "Year", y = "Average Life Expectancy")
plot_ly(overview_plot)
plot_ly(overview_le, overview_plot)
overview_plot <- ggplot(overview_le) +
geom_point(mapping = aes(x = Year, y = Avg.Life.Expectancy.Years, color = Avg.Life.Expectancy.Years)) +
scale_color_gradient(low = "orange", high = "blue") +
ggtitle("Average Life Expectancy Over Time 1900 to 2016") +
theme(
plot.title = element_text(size = 18),
legend.position = "none") +
labs(x = "Year", y = "Average Life Expectancy")
plot_ly(overview_plot)
plot_ly(overiew_le, overview_plot)
overview_le <- le_national %>%
filter(Sex == "Both Sexes", Race == "All Races") %>%
na.omit()
scale_color_gradient
plot_ly(overiew_le, overview_plot)
overview_le <- le_national %>%
filter(Sex == "Both Sexes", Race == "All Races") %>%
na.omit()
plot_ly(overview_le, overview_plot)
ggplotly(overview_le, overview_plot)
ggplotly(overview_plot)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
overview_le$Avg.Life.Expectancy.Years
overview_le[overview_le$Year == "1900", overview_le$Avg.Life.Expectancy.Years]
overview_le[overview_le$Year == "1900", Avg.Life.Expectancy.Years]
le_1900 <- overview_le %>%
filter(Year == "1900") %>%
select(Avg.Life.Expectancy.Years)
le_1900
le_2016 <- overview_le %>%
filter(Year == "2016") %>%
select(Avg.Life.Expectancy.Years)
le_2016
le_2016 <- overview_le %>%
filter(Year == "2016") %>%
select(Avg.Life.Expectancy.Years)
le_2016
le_2016 <- overview_le %>%
filter(Year == "2014") %>%
select(Avg.Life.Expectancy.Years)
le_2014 <- overview_le %>%
filter(Year == "2014") %>%
select(Avg.Life.Expectancy.Years)
le_2014
runApp()
runApp()
runApp()
lm(overview_le$Year, overview_le$Avg.Life.Expectancy.Years)
lm(overview_le$Year ~ overview_le$Avg.Life.Expectancy.Years)
oveview_slope <- lm(overview_le$Year ~ overview_le$Avg.Life.Expectancy.Years)
runApp()
overview_slope <- lm(overview_le$Year ~ overview_le$Avg.Life.Expectancy.Years)
runApp()
overview_slope$fitted.values
overview_slope$residuals
overview_slope$model
overview_slope$assign
overview_slope$rank
class(overview_slope)
overview_slope
overview_slope$coefficients
overview_slope <- overview_slope$coefficients
class(overview_slope)
overview_slope[2,]
overview_slope[,2]
overview_slope <- as.data.frame(overview_slope$coefficients)
overview_slope
overview_slope <- as.vector(overview_slope$coefficients)
overview_slope <- lm(overview_le$Year ~ overview_le$Avg.Life.Expectancy.Years)
coefficients(overview_slope)
z <- coefficients(overview_slope)
class(z)
overview_slope <- coefficients(overview_slope)
overview_slope <- coefficients(overview_slope)
overview_slope <- lm(overview_le$Year ~ overview_le$Avg.Life.Expectancy.Years)
overview_slope <- coefficients(overview_slope)
overview_slope[2]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
deployApp()
runApp()
runApp()
runApp()
